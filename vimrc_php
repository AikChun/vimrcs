set nocompatible              " required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" Add all your plugins here (note older versions of Vundle used Bundle instead of Plugin)
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'StanAngeloff/php.vim'
Plugin 'altercation/vim-colors-solarized'
Plugin 'arnaud-lb/vim-php-namespace'
Plugin 'ervandew/supertab'
Plugin 'garbas/vim-snipmate'
Plugin 'godlygeek/tabular'
Plugin 'jnurmine/Zenburn'
Plugin 'jwalton512/vim-blade'
Plugin 'kien/ctrlp.vim'
Plugin 'mattn/emmet-vim'
Plugin 'rking/ag.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'skwp/greplace.vim'
Plugin 'stephpy/vim-php-cs-fixer'
Plugin 'tobyS/pdv'
Plugin 'tomasr/molokai'
Plugin 'tomtom/tcomment_vim'
Plugin 'tomtom/tlib_vim'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-surround'


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

let mapleader=" "


" NerdTreeMappings
map <C-B> :NERDTreeToggle<CR>
let NERDTreeShowLineNumbers=1
let NERDTreeShowHidden=1
let NERDTreeHijackNetrw=0

" CtrlP setting
nnoremap <D-p> :CtrlP<CR>
nnoremap <D-r> :CtrlPBufTag<CR>
let g:ctrlp_working_path_mode='r'
set wildignore+=*/node_modules/*,*/vendor/*,*/.git/*,*/.hg/*,*/.svn/*
let g:ctrlp_match_window = 'top,order:ttb,min:1,max:10,results:10'
" Always show statusline
set laststatus=2

" Agvimfiles Configuration"
set runtimepath^=~/vimfiles/bundle/ag

" Greplacevimfiles Configuration
set grepprg=ag                                                                                " Uses Ag
let g:grep_cmd_opts = '--line-numbers --noheading'

" vim php namespace Configuration
function! IPhpInsertUse()
    call PhpInsertUse()
    call feedkeys('a',  'n')
endfunction
autocmd FileType php nnoremap <Leader>n :call PhpInsertUse()<CR>

function! IPhpExpandClass()
    call PhpExpandClass()
    call feedkeys('a', 'n')
endfunction
autocmd FileType php nnoremap <Leader>nf :call PhpExpandClass()<CR>

" php documentor
let g:pdv_template_dir = $HOME ."/vimfiles/bundle/pdv/templates_snip"
nnoremap <Leader>d :call pdv#DocumentWithSnip()<CR>

" ultisnips configurations
" Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"
let g:UltiSnipsSnippetsDir="~/vimfiles/snippets"

" php-cs-fixer

" Directory of cs-fixer
let g:php_cs_fixer_php_path = "Users/aikchun/.composer/vendor/bin/php-cs-fixer"
" set psr2 format
let g:php_cs_fixer_level = "psr2"  
" disable PSR-0.
let g:php_cs_fixer_fixers_list = "-psr0"
" don't add ley mappings.
let g:php_cs_fixer_enable_default_mapping = 0
nnoremap <silent><leader>pf :call PhpCsFixerFixFile()<CR>

"------------------------- End of plugin configurations -------------------------
"
"------------------------- General configuration -------------------------

" Basic settings
set encoding=utf-8
set nowrap
set backspace=2
set relativenumber
set number
set linespace=12
filetype plugin indent on

syntax on
set nocompatible
set wildmenu
set wildmode=list:longest,full
set ic
set smartcase
set autoindent
set copyindent
set incsearch
set hlsearch
set splitbelow
set splitright
set clipboard=unnamedplus,unnamed,autoselect
set completeopt-=preview
set synmaxcol=256

set backupdir=~/.vim/backup//
set directory=~/.vim/swap//

inoremap jk <esc>
inoremap kj <esc>

" Autoload
au InsertLeave * set nopaste

" Functions
function! NumberToggle()
    if(&relativenumber == 1)
        set norelativenumber
    else
        set relativenumber
    endif
endfunc
function! SearchWord(word)
    let @/ = '\<' . a:word . '\>'
    normal n
endfunction
command! -nargs=1 SearchWord call SearchWord(<f-args>)

"-------------------- mappings --------------------"

"" Move through windows
nnoremap <C-H> <C-W>h
nnoremap <C-L> <C-W>l
nnoremap <C-K> <C-W>k
nnoremap <C-j> <C-W>j

nnoremap <silent> n nzz
nnoremap <silent> N Nzz
inoremap <C-V> <C-O>p
inoremap ¬ <ESC>l
inoremap ˙ <ESC>h
inoremap ø <ESC>o
inoremap Ø <ESC>O

" Theme settings
set background=dark
let g:molokai_original=1
if has("gui_running")
    set cursorline
    colorscheme molokai
    " Remove scrollbars
    set guioptions-=l
    set guioptions-=L
    set guioptions-=r
    set guioptions-=R
    set guioptions-=e " we don't want gui tabs
else
    set cursorline
    set t_Co=256
    let g:rehash256=1
    colorscheme molokai
endif

function! SetupEnvironment()
  let l:path = expand('%:p')
  if l:path =~ '/home/aikchun/VagrantBoxes/ng-rails-vagrant-master/shared/popcorn'
    setlocal tabstop=2 shiftwidth=2 expandtab
  elseif l:path =~ '/Users/aikchun/VagrantBoxes/Trusty-64/sharedfolder/CakePHP-Projects/ENO/one-entry-form'
    setlocal tabstop=4 shiftwidth=4 expandtab
  elseif l:path =~ '/Users/aikchun/VagrantBoxes/Trusty-64/sharedfolder/CakePHP-Projects/ENO/rupert'
    setlocal tabstop=4 shiftwidth=4 expandtab
  elseif l:path =~ '/Users/aikchun/VagrantBoxes/CrmApProject/sharedfolder/CORRI'
    setlocal tabstop=4 shiftwidth=4 expandtab
  elseif l:path =~ '/Users/aikchun/VagrantBoxes/CrmApProject/sharedfolder/python-angularjs'
    setlocal tabstop=4 shiftwidth=4 expandtab
  elseif l:path =~ '/Users/aikchun/VagrantBoxes/Trusty-64/sharedfolder/CakePHP-Projects/ENO/ltequotationapp'
    setlocal tabstop=4 shiftwidth=4 noexpandtab
  elseif l:path =~ '/Users/aikchun/VagrantBoxes/CakeFest2014'
    setlocal tabstop=4 shiftwidth=4 noexpandtab
  elseif l:path =~ '/Users/aikchun/web/sites'
    setlocal tabstop=4 shiftwidth=4 expandtab
  endif
endfunction
autocmd! BufReadPost,BufNewFile * call SetupEnvironment()

" Search for selected text, forwards or backwards.
vnoremap <silent> * :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy/<C-R><C-R>=substitute(
  \escape(@", '/\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gV:call setreg('"', old_reg, old_regtype)<CR>
vnoremap <silent> # :<C-U>
  \let old_reg=getreg('"')<Bar>let old_regtype=getregtype('"')<CR>
  \gvy?<C-R><C-R>=substitute(
  \escape(@", '?\.*$^~['), '\_s\+', '\\_s\\+', 'g')<CR><CR>
  \gV:call setreg('"', old_reg, old_regtype)<CR>

"----------- Leader mappings -----------"
" Buffer shortcuts
nnoremap <Leader>bo :BufOnly<CR>
nnoremap <Leader>bp :bprevious<CR>

" File saving and closing
nnoremap <Leader>w :w<CR>
nnoremap <Leader>W :wa<CR>
nnoremap <Leader>q :q<CR>
nnoremap <Leader>Q :qa<CR>
nnoremap <Leader>s :SearchWord 
nnoremap <Leader>ev :e $MYVIMRC<CR>
nnoremap <Leader>es :e ~/vimfiles/snippets/php.snippets<CR>
nnoremap <Leader>lr :e app/Http/routes.php<CR>G

set pastetoggle=<F5>

" turn off highlighting for search
nnoremap <silent> <Leader>h :nohlsearch<CR>

" Format json string
vnoremap <Leader>j :!python -m json.tool<CR>

" converts highlighted words to camelCase
vnoremap <Leader>c :s#\%(\%(\k\+\)\)\@<=_\(\k\)#\u\1#g<CR>

" converts highlighted words to snake_case
vnoremap <Leader>s :s/\C\(\U\&\S\)\([A-Z]\)/\1_\l\2/g<CR>

" manual folding between braces
nnoremap <Leader>f vi}zf
" folding
" zc - close 
" zo - open
" za - toggle
" zC - close all
" zO - open all

" For easy indent in visual mode
vnoremap < <gv
vnoremap > >gv

nnoremap * *<c-o>

" change indentation
nnoremap <Leader>ih :set tabstop=2 shiftwidth=2 expandtab<CR>
nnoremap <Leader>ip :set tabstop=4 shiftwidth=4 expandtab<CR>

" copy pwd into clipboard
nmap <Leader>cwd :let @+ = expand("%:p:h") <CR>
vnoremap // y/<C-R>"<CR>
if exists(":Tabularize")
      nmap <Leader>a= :Tabularize /
      vmap <Leader>a= :Tabularize /
endif

abbrev gm !php artisan make:model
abbrev gc !php artisan make:controller
abbrev gmig !php artisan make:migration
abbrev cc CtrlPClearCache
abbrev createfolder !mkdir
abbrev createview :new resources/views/
abbrev createviewfolder !mkdir resources/views/
abbrev ae Tab /^[^=]*\zs=
abbrev aa Tab/=>
abbrev rs vertical resize

autocmd BufWritePre *.php :%s/\s\+$//e
